package edu.ing1.pds.vsc.fenetre;

import edu.ing1.pds.vsc.capteur.CapteurFrame;
import edu.ing1.pds.vsc.enterprise.CrudEnterprise;
import edu.ing1.pds.vsc.enterprise.Enterprise;
import edu.ing1.pds.vsc.enterprise.EnterpriseFrame;
import edu.ing1.pds.vsc.local.LocalFrame;
import edu.ing1.pds.vsc.materiel.MaterielFrame;
import edu.ing1.pds.vsc.mobilier.MobilierFrame;
import java.beans.PropertyVetoException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 *
 * @author Ines
 */
public class FenetrePricipale extends javax.swing.JFrame {

    private final static Logger logger = Logger.getLogger(FenetrePricipale.class);

    private CrudEnterprise crudEnterprise;
    private SimpleDateFormat formater;
    private EnterpriseFrame enterpriseFrame;
    private LocalFrame localFrame;
    private CapteurFrame capteurFrame;
    private MobilierFrame mobilierFrame;
    private MaterielFrame materielFrame;

    private List<Enterprise> enterpriseList;
    private Enterprise enterpriseSelected;
    private DefaultComboBoxModel comboBoxModelLibEnterprise;

    /**
     * Creates new form FenetrePricipale
     */
    public FenetrePricipale() {
        initFrame();
        initComboBoxModel();
        initComponents();

    }

    private void initFrame() {
        CrudEnterprise crudEnterprise = new CrudEnterprise();
        try {
            enterpriseList = crudEnterprise.findAll();
        } catch (Exception ex) {
            logger.error("Erreur...", ex);
        }
        formater = new SimpleDateFormat("dd/MM/yyyy");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        separatorBar1 = new javax.swing.JToolBar.Separator();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxlibEnterprise = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jButtonLocal = new javax.swing.JButton();
        jButtonMateriel = new javax.swing.JButton();
        jButtonMobilier = new javax.swing.JButton();
        jButtonCapteur = new javax.swing.JButton();
        desktopPane = new javax.swing.JDesktopPane();
        jPanelPied = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFichier = new javax.swing.JMenu();
        jMenuItemQuitter = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuItemEnterprise = new javax.swing.JMenuItem();
        jMenuItemLocal = new javax.swing.JMenuItem();
        jMenuItemMatriel = new javax.swing.JMenuItem();
        jMenuItemMobilier = new javax.swing.JMenuItem();
        jMenuItemCapteur = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analyser d'indicateur");
        setPreferredSize(new java.awt.Dimension(1800, 900));

        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(77, 50));
        jToolBar1.setMinimumSize(new java.awt.Dimension(77, 50));
        jToolBar1.setPreferredSize(new java.awt.Dimension(100, 40));
        jToolBar1.add(separatorBar1);

        jLabel2.setText("Enterprise    ");
        jToolBar1.add(jLabel2);

        jComboBoxlibEnterprise.setModel(comboBoxModelLibEnterprise);
        jComboBoxlibEnterprise.setMaximumSize(new java.awt.Dimension(250, 40));
        jComboBoxlibEnterprise.setMinimumSize(new java.awt.Dimension(250, 40));
        jComboBoxlibEnterprise.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxlibEnterpriseItemStateChanged(evt);
            }
        });
        jToolBar1.add(jComboBoxlibEnterprise);

        jLabel1.setPreferredSize(new java.awt.Dimension(200, 50));
        jToolBar1.add(jLabel1);
        jToolBar1.add(jSeparator1);
        jToolBar1.add(jSeparator2);

        jButtonLocal.setText("Local");
        jButtonLocal.setFocusable(false);
        jButtonLocal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonLocal.setMaximumSize(new java.awt.Dimension(75, 60));
        jButtonLocal.setMinimumSize(new java.awt.Dimension(75, 60));
        jButtonLocal.setPreferredSize(new java.awt.Dimension(120, 55));
        jButtonLocal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLocalActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonLocal);

        jButtonMateriel.setText("Materiel");
        jButtonMateriel.setFocusable(false);
        jButtonMateriel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonMateriel.setMaximumSize(new java.awt.Dimension(120, 60));
        jButtonMateriel.setMinimumSize(new java.awt.Dimension(75, 60));
        jButtonMateriel.setPreferredSize(new java.awt.Dimension(120, 55));
        jButtonMateriel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonMateriel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMaterielActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonMateriel);

        jButtonMobilier.setText("Mobilier");
        jButtonMobilier.setFocusable(false);
        jButtonMobilier.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonMobilier.setMaximumSize(new java.awt.Dimension(120, 60));
        jButtonMobilier.setMinimumSize(new java.awt.Dimension(75, 60));
        jButtonMobilier.setPreferredSize(new java.awt.Dimension(120, 55));
        jButtonMobilier.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonMobilier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMobilierActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonMobilier);

        jButtonCapteur.setText("Capteur");
        jButtonCapteur.setFocusable(false);
        jButtonCapteur.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonCapteur.setMaximumSize(new java.awt.Dimension(120, 60));
        jButtonCapteur.setMinimumSize(new java.awt.Dimension(75, 60));
        jButtonCapteur.setPreferredSize(new java.awt.Dimension(120, 55));
        jButtonCapteur.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonCapteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCapteurActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonCapteur);

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPane.setLayout(desktopPaneLayout);
        desktopPaneLayout.setHorizontalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 959, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
        );

        jPanelPied.setForeground(new java.awt.Color(204, 255, 204));

        javax.swing.GroupLayout jPanelPiedLayout = new javax.swing.GroupLayout(jPanelPied);
        jPanelPied.setLayout(jPanelPiedLayout);
        jPanelPiedLayout.setHorizontalGroup(
            jPanelPiedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelPiedLayout.setVerticalGroup(
            jPanelPiedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jMenuFichier.setText("Fichier");

        jMenuItemQuitter.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, 0));
        jMenuItemQuitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/arreteBouton.png"))); // NOI18N
        jMenuItemQuitter.setText("Quitter");
        jMenuItemQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemQuitterActionPerformed(evt);
            }
        });
        jMenuFichier.add(jMenuItemQuitter);

        jMenuBar1.add(jMenuFichier);

        jMenuEdit.setText("Edition");
        jMenuEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEditActionPerformed(evt);
            }
        });

        jMenuItemEnterprise.setText("Enterprise");
        jMenuItemEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEnterpriseActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemEnterprise);

        jMenuItemLocal.setText("Local");
        jMenuItemLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLocalActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemLocal);

        jMenuItemMatriel.setText("Materiel");
        jMenuItemMatriel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMatrielActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemMatriel);

        jMenuItemMobilier.setText("Mobilier");
        jMenuItemMobilier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMobilierActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemMobilier);

        jMenuItemCapteur.setText("Capteur");
        jMenuItemCapteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCapteurActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemCapteur);

        jMenuBar1.add(jMenuEdit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPied, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(desktopPane, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desktopPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelPied, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemQuitterActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItemQuitterActionPerformed

    private void jButtonMaterielActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMaterielActionPerformed
        showMateriel();
    }//GEN-LAST:event_jButtonMaterielActionPerformed

    private void jButtonLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLocalActionPerformed
        // TODO add your handling code here:
        showLocal();
    }//GEN-LAST:event_jButtonLocalActionPerformed

    private void jButtonMobilierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMobilierActionPerformed
        // TODO add your handling code here:
        showMobilier();
    }//GEN-LAST:event_jButtonMobilierActionPerformed

    private void jButtonCapteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCapteurActionPerformed
        // TODO add your handling code here:
        showCapteur();
    }//GEN-LAST:event_jButtonCapteurActionPerformed

    private void jMenuEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuEditActionPerformed

    private void jMenuItemEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEnterpriseActionPerformed
        // TODO add your handling code here:
        showEnterprse();
    }//GEN-LAST:event_jMenuItemEnterpriseActionPerformed

    private void jMenuItemLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLocalActionPerformed
        // TODO add your handling code here:
        showLocal();
    }//GEN-LAST:event_jMenuItemLocalActionPerformed

    private void jMenuItemMatrielActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMatrielActionPerformed
        // TODO add your handling code here:
        showMateriel();
    }//GEN-LAST:event_jMenuItemMatrielActionPerformed

    private void jMenuItemMobilierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMobilierActionPerformed
        // TODO add your handling code here:
        showMobilier();
    }//GEN-LAST:event_jMenuItemMobilierActionPerformed

    private void jMenuItemCapteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCapteurActionPerformed
        // TODO add your handling code here:
        showCapteur();
    }//GEN-LAST:event_jMenuItemCapteurActionPerformed

    private void jComboBoxlibEnterpriseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxlibEnterpriseItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == 1) {
            String lib = evt.getItem().toString();
            if (lib != null && !lib.isEmpty()) {
                for (Enterprise enterprise : enterpriseList) {
                    if (lib.equals(enterprise.getLib())) {
                        enterpriseSelected = enterprise;
                        break;
                    }
                }
            }
        } else {
            enterpriseSelected = null;
        }
    }//GEN-LAST:event_jComboBoxlibEnterpriseItemStateChanged

    private void showEnterprse() {
        if (desktopPane.getAllFrames().length > 1) {
            for (JInternalFrame frame : desktopPane.getAllFrames()) {
                frame.dispose();
            }
            desktopPane.removeAll();
        }
        enterpriseFrame = new EnterpriseFrame(this);
        desktopPane.add(enterpriseFrame);
        try {
            enterpriseFrame.setMaximum(true);
        } catch (PropertyVetoException ex) {
            JOptionPane.showMessageDialog(null, "Message d'erreur", "Erreur : " + ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
    }

    private void showCapteur() {
        if (enterpriseSelected != null && enterpriseSelected.getId() != null) {
            if (desktopPane.getAllFrames().length > 1) {
                for (JInternalFrame frame : desktopPane.getAllFrames()) {
                    frame.dispose();
                }
                desktopPane.removeAll();
            }
            capteurFrame = new CapteurFrame(enterpriseSelected);
            desktopPane.add(capteurFrame);

            try {
                capteurFrame.setMaximum(true);
            } catch (PropertyVetoException ex) {
                JOptionPane.showMessageDialog(null, "Message d'erreur", "Erreur : " + ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Choisir enterprise", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void showMateriel() {
        if (enterpriseSelected != null && enterpriseSelected.getId() != null) {
            if (desktopPane.getAllFrames().length > 1) {
                for (JInternalFrame frame : desktopPane.getAllFrames()) {
                    frame.dispose();
                }
                desktopPane.removeAll();
            }
            materielFrame = new MaterielFrame(enterpriseSelected);
            desktopPane.add(materielFrame);
            try {
                materielFrame.setMaximum(true);
            } catch (PropertyVetoException ex) {
                JOptionPane.showMessageDialog(null, "Message d'erreur", "Erreur : " + ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Choisir enterprise", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void showMobilier() {
        if (enterpriseSelected != null && enterpriseSelected.getId() != null) {
            if (desktopPane.getAllFrames().length > 1) {
                for (JInternalFrame frame : desktopPane.getAllFrames()) {
                    frame.dispose();
                }
                desktopPane.removeAll();
            }
            mobilierFrame = new MobilierFrame(enterpriseSelected);
            desktopPane.add(mobilierFrame);
            try {
                mobilierFrame.setMaximum(true);
            } catch (PropertyVetoException ex) {
                JOptionPane.showMessageDialog(null, "Message d'erreur", "Erreur : " + ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Choisir enterprise", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void showLocal() {
        if (enterpriseSelected != null && enterpriseSelected.getId() != null) {
            if (desktopPane.getAllFrames().length > 1) {
                for (JInternalFrame frame : desktopPane.getAllFrames()) {
                    frame.dispose();
                }
                desktopPane.removeAll();
            }
            localFrame = new LocalFrame(enterpriseSelected);
            desktopPane.add(localFrame);
            try {
                localFrame.setMaximum(true);
            } catch (PropertyVetoException ex) {
                JOptionPane.showMessageDialog(null, "Message d'erreur", "Erreur : " + ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Choisir enterprise", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void initComboBoxSelected() {
        jComboBoxlibEnterprise.setSelectedItem(null);
    }

    public void initComboBox() {
        initComboBoxModel();
        jComboBoxlibEnterprise.setModel(comboBoxModelLibEnterprise);
        initComboBoxSelected();
    }

    public void initComboBoxModel() {
        Vector<String> item = new Vector<>();
        item.add("");
        crudEnterprise = new CrudEnterprise();
        try {
            enterpriseList = crudEnterprise.findAll();
        } catch (Exception ex) {
            logger.error("Erreur ", ex);
        }
        for (Enterprise enterprise : enterpriseList) {
            item.add(enterprise.getLib());
        }
        comboBoxModelLibEnterprise = new DefaultComboBoxModel(item);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JButton jButtonCapteur;
    private javax.swing.JButton jButtonLocal;
    private javax.swing.JButton jButtonMateriel;
    private javax.swing.JButton jButtonMobilier;
    private javax.swing.JComboBox<String> jComboBoxlibEnterprise;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFichier;
    private javax.swing.JMenuItem jMenuItemCapteur;
    private javax.swing.JMenuItem jMenuItemEnterprise;
    private javax.swing.JMenuItem jMenuItemLocal;
    private javax.swing.JMenuItem jMenuItemMatriel;
    private javax.swing.JMenuItem jMenuItemMobilier;
    private javax.swing.JMenuItem jMenuItemQuitter;
    private javax.swing.JPanel jPanelPied;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar.Separator separatorBar1;
    // End of variables declaration//GEN-END:variables
}
